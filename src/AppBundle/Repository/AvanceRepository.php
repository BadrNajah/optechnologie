<?php

namespace AppBundle\Repository;

/**
 * AvanceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AvanceRepository extends \Doctrine\ORM\EntityRepository
{
    public function sumAvance()
    {
        $conn = $this->getEntityManager()->getConnection();
        $sql = ' 
                SELECT SUM(avance) as total_avance FROM `avance`
            ';
        $stmt = $conn->prepare($sql);
        $stmt->execute();
        return $stmt->fetchAll();
    }

    public function TodayCaisse()
    {
        $conn = $this->getEntityManager()->getConnection();
        $sql = ' 
                SELECT SUM(avance) as total_avance , date_avance FROM `avance` group by date_avance   
            ';
        $stmt = $conn->prepare($sql);
        $stmt->execute();
        return $stmt->fetchAll();
    }

    public function avance_by_dir()
    {
        $conn = $this->getEntityManager()->getConnection();
        $sql = ' 
                SELECT SUM(avance) as total_avance , mont_id FROM `avance` 
                WHERE mont_id IS NOT NULL group by mont_id
            ';
        $stmt = $conn->prepare($sql);
        $stmt->execute();
        return $stmt->fetchAll();
    }


    public function avance_by_client($id)
    {
        $conn = $this->getEntityManager()->getConnection();
        $sql = ' 
                SELECT DISTINCT a.id , a.avance , a.date_avance from avance a, mont m , lentile l 
                WHERE (l.id = a.lent_id or m.id = a.mont_id) and m.client_id = :id ORDER BY `a`.`id` DESC
            ';
        $stmt = $conn->prepare($sql);
        $stmt->execute(['id' => $id]);
        return $stmt->fetchAll();
    }

    public function get_caisse_stat($month)
    {
        $conn = $this->getEntityManager()->getConnection();
        $sql = ' 
                SELECT SUM(avance) as caissedujour , date_avance as datedujour FROM `avance` WHERE MONTH(`date_avance`) = :month GROUP BY DAY(`date_avance`)
            ';
        $stmt = $conn->prepare($sql);
        $stmt->execute(['month' => $month]);
        return $stmt->fetchAll();
    }

    
    


}
